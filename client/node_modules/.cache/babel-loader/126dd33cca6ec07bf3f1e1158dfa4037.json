{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js\";\nimport React from \"react\";\nimport './styles/home.style.css';\nimport './styles/common.style.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport authService from '../services/auth.service';\nimport configs from '../config';\nimport axios from 'axios';\nimport NavBar from \"../components/navbar.component\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props); // check if user did not sign in\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      let password = document.getElementById('password').value;\n      axios.post(`${configs.API_URL}/room/`, {\n        user: this.state.userPrivate,\n        password: password\n      }).then(res => {\n        if (res.data.error) {\n          alert(res.data.error);\n          return;\n        }\n\n        this.props.history.push('/watch/' + res.data);\n        window.location.reload();\n      });\n    };\n\n    this.handleShow = (mode, username) => {\n      if (mode === 'public') {\n        axios.post(`${configs.API_URL}/room/`, {\n          user: username,\n          password: null\n        }).then(res => {\n          this.props.history.push('/watch/' + res.data);\n          window.location.reload();\n        });\n      } else {\n        this.setState({\n          show: true,\n          userPrivate: username\n        });\n      }\n    };\n\n    this.GetBroadcasters = () => {\n      axios.get(`${configs.API_URL}/broadcaster/list`).then(res => {\n        this.setState({\n          broadcasters: res.data\n        });\n        console.log(res.data);\n      });\n    };\n\n    let user = authService.getCurrentUser();\n\n    if (!user) {\n      this.state = {\n        broadcasters: {},\n        user: null,\n        isPrivate: false,\n        show: false,\n        userPrivate: ''\n      };\n    } else {\n      this.state = {\n        broadcasters: {},\n        user: JSON.parse(user),\n        isPrivate: false,\n        show: false,\n        userPrivate: ''\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.GetBroadcasters();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        user: this.state.user,\n        history: this.props.history,\n        handleSwitch: this.handleSwitch,\n        isStreaming: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-primary text-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"On Stream\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(this.state.broadcasters).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"No streamer online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 84\n          }, this) : Object.keys(this.state.broadcasters).map((key, i) => {\n            if (this.state.broadcasters[key].mode === 'private') {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => {\n                      this.handleShow('private', this.state.broadcasters[key].name);\n                    },\n                    children: [this.state.broadcasters[key].name, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge badge-danger\",\n                      children: \"private\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 56\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 56\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 63\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 51\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => {\n                      this.handleShow('public', this.state.broadcasters[key].name);\n                    },\n                    children: [this.state.broadcasters[key].name, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge badge-success\",\n                      children: \"public\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 56\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 56\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 63\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 51\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Room authentication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Enter password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js"],"names":["React","authService","configs","axios","NavBar","Button","Modal","Home","Component","constructor","props","handleClose","setState","show","handleSubmit","password","document","getElementById","value","post","API_URL","user","state","userPrivate","then","res","data","error","alert","history","push","window","location","reload","handleShow","mode","username","GetBroadcasters","get","broadcasters","console","log","getCurrentUser","isPrivate","JSON","parse","componentDidMount","render","handleSwitch","Object","keys","length","map","key","i","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAO,2BAAP;AACA,OAAO,sCAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACd,UAAMA,KAAN,EADc,CAGd;;AAHc,SAyBnBC,WAzBmB,GAyBL,MAAM;AACf,WAAKC,QAAL,CAAc;AACTC,QAAAA,IAAI,EAAE;AADG,OAAd;AAGJ,KA7BkB;;AAAA,SA+BnBC,YA/BmB,GA+BJ,MAAM;AAChB,UAAIC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAnD;AACAf,MAAAA,KAAK,CAACgB,IAAN,CAAY,GAAEjB,OAAO,CAACkB,OAAQ,QAA9B,EAAuC;AAClCC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,WADiB;AAElCR,QAAAA,QAAQ,EAAEA;AAFwB,OAAvC,EAIMS,IAJN,CAIWC,GAAG,IAAI;AACR,YAAIA,GAAG,CAACC,IAAJ,CAASC,KAAb,EAAoB;AACfC,UAAAA,KAAK,CAACH,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAL;AACA;AACJ;;AACD,aAAKjB,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,YAAYL,GAAG,CAACC,IAAxC;AACAK,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACJ,OAXN;AAYJ,KA7CkB;;AAAA,SA+CnBC,UA/CmB,GA+CN,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC5B,UAAID,IAAI,KAAK,QAAb,EAAuB;AAClBhC,QAAAA,KAAK,CAACgB,IAAN,CAAY,GAAEjB,OAAO,CAACkB,OAAQ,QAA9B,EAAuC;AAClCC,UAAAA,IAAI,EAAEe,QAD4B;AAElCrB,UAAAA,QAAQ,EAAE;AAFwB,SAAvC,EAIMS,IAJN,CAIWC,GAAG,IAAI;AACR,eAAKf,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,YAAYL,GAAG,CAACC,IAAxC;AACAK,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACJ,SAPN;AAQJ,OATD,MAUK;AACA,aAAKrB,QAAL,CAAc;AACTC,UAAAA,IAAI,EAAE,IADG;AAETU,UAAAA,WAAW,EAAEa;AAFJ,SAAd;AAIJ;AACL,KAhEkB;;AAAA,SAsEnBC,eAtEmB,GAsED,MAAM;AACnBlC,MAAAA,KAAK,CAACmC,GAAN,CAAW,GAAEpC,OAAO,CAACkB,OAAQ,mBAA7B,EACMI,IADN,CACWC,GAAG,IAAI;AACR,aAAKb,QAAL,CAAc;AACT2B,UAAAA,YAAY,EAAEd,GAAG,CAACC;AADT,SAAd;AAGAc,QAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACC,IAAhB;AACJ,OANN;AAOJ,KA9EkB;;AAId,QAAIL,IAAI,GAAGpB,WAAW,CAACyC,cAAZ,EAAX;;AACA,QAAI,CAACrB,IAAL,EAAW;AACN,WAAKC,KAAL,GAAa;AACRiB,QAAAA,YAAY,EAAE,EADN;AAERlB,QAAAA,IAAI,EAAE,IAFE;AAGRsB,QAAAA,SAAS,EAAE,KAHH;AAIR9B,QAAAA,IAAI,EAAE,KAJE;AAKRU,QAAAA,WAAW,EAAE;AALL,OAAb;AAOJ,KARD,MASK;AACA,WAAKD,KAAL,GAAa;AACRiB,QAAAA,YAAY,EAAE,EADN;AAERlB,QAAAA,IAAI,EAAEuB,IAAI,CAACC,KAAL,CAAWxB,IAAX,CAFE;AAGRsB,QAAAA,SAAS,EAAE,KAHH;AAIR9B,QAAAA,IAAI,EAAE,KAJE;AAKRU,QAAAA,WAAW,EAAE;AALL,OAAb;AAOJ;AACL;;AA2CDuB,EAAAA,iBAAiB,GAAG;AACf,SAAKT,eAAL;AACJ;;AAcDU,EAAAA,MAAM,GAAG;AACJ,wBACK;AAAA,8BACK,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWD,IAAzB;AAA+B,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWmB,OAAnD;AAA4D,QAAA,YAAY,EAAE,KAAKmB,YAA/E;AAA6F,QAAA,WAAW,EAAE;AAA1G;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,gCACK;AAAO,UAAA,SAAS,EAAC,uBAAjB;AAAA,iCACK;AAAA,mCACK;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA,qCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBADL,eAMK;AAAA,oBACMC,MAAM,CAACC,IAAP,CAAY,KAAK5B,KAAL,CAAWiB,YAAvB,EAAqCY,MAArC,KAAgD,CAAhD,gBAAoD;AAAA,mCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAApD,GACIF,MAAM,CAACC,IAAP,CAAY,KAAK5B,KAAL,CAAWiB,YAAvB,EAAqCa,GAArC,CAAyC,CAACC,GAAD,EAAMC,CAAN,KAAY;AAChD,gBAAI,KAAKhC,KAAL,CAAWiB,YAAX,CAAwBc,GAAxB,EAA6BlB,IAA7B,KAAsC,SAA1C,EAAqD;AAChD,kCACK;AAAA,uCAAY;AAAA,yCACP,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,MAAhB;AAAuB,oBAAA,OAAO,EAAE,MAAM;AAAE,2BAAKD,UAAL,CAAgB,SAAhB,EAA2B,KAAKZ,KAAL,CAAWiB,YAAX,CAAwBc,GAAxB,EAA6BE,IAAxD;AAA+D,qBAAvG;AAAA,+BACM,KAAKjC,KAAL,CAAWiB,YAAX,CAAwBc,GAAxB,EAA6BE,IADnC,uBAGA;AAAM,sBAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA;AAAZ,iBAASD,CAAT;AAAA;AAAA;AAAA;AAAA,sBADL;AAWJ,aAZD,MAaK;AACA,kCACK;AAAA,uCAAY;AAAA,yCACP,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,MAAhB;AAAuB,oBAAA,OAAO,EAAE,MAAM;AAAE,2BAAKpB,UAAL,CAAgB,QAAhB,EAA0B,KAAKZ,KAAL,CAAWiB,YAAX,CAAwBc,GAAxB,EAA6BE,IAAvD;AAA8D,qBAAtG;AAAA,+BACM,KAAKjC,KAAL,CAAWiB,YAAX,CAAwBc,GAAxB,EAA6BE,IADnC,uBAGA;AAAM,sBAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA;AAAZ,iBAASD,CAAT;AAAA;AAAA;AAAA;AAAA,sBADL;AASJ;AACL,WAzBD;AAFV;AAAA;AAAA;AAAA;AAAA,gBANL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,eAyCK,QAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWT,IAAxB;AAA8B,QAAA,MAAM,EAAE,KAAKF,WAA3C;AAAA,gCACK,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACK,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBADL,eAIK,QAAC,KAAD,CAAO,IAAP;AAAA,kCACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAEK;AAAO,YAAA,EAAE,EAAC,UAAV;AAAqB,YAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJL,eAQK,QAAC,KAAD,CAAO,MAAP;AAAA,kCACK,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAE,KAAKA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADL,eAIK,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,KAAKG,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJL;AAAA;AAAA;AAAA;AAAA;AAAA,gBARL;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCL;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AA6DJ;;AAlJ6B;;AAqJnC,eAAeP,IAAf","sourcesContent":["import React from \"react\";\nimport './styles/home.style.css'\nimport './styles/common.style.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport authService from '../services/auth.service'\nimport configs from '../config'\nimport axios from 'axios'\nimport NavBar from \"../components/navbar.component\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nclass Home extends React.Component {\n\n     constructor(props) {\n          super(props)\n\n          // check if user did not sign in\n          let user = authService.getCurrentUser();\n          if (!user) {\n               this.state = {\n                    broadcasters: {},\n                    user: null,\n                    isPrivate: false,\n                    show: false,\n                    userPrivate: ''\n               }\n          }\n          else {\n               this.state = {\n                    broadcasters: {},\n                    user: JSON.parse(user),\n                    isPrivate: false,\n                    show: false,\n                    userPrivate: ''\n               }\n          }\n     }\n\n     handleClose = () => {\n          this.setState({\n               show: false\n          })\n     }\n\n     handleSubmit = () => {\n          let password = document.getElementById('password').value\n          axios.post(`${configs.API_URL}/room/`, {\n               user: this.state.userPrivate,\n               password: password\n          })\n               .then(res => {\n                    if (res.data.error) {\n                         alert(res.data.error)\n                         return\n                    }\n                    this.props.history.push('/watch/' + res.data)\n                    window.location.reload()\n               })\n     }\n\n     handleShow = (mode, username) => {\n          if (mode === 'public') {\n               axios.post(`${configs.API_URL}/room/`, {\n                    user: username,\n                    password: null\n               })\n                    .then(res => {\n                         this.props.history.push('/watch/' + res.data)\n                         window.location.reload()\n                    })\n          }\n          else {\n               this.setState({\n                    show: true,\n                    userPrivate: username\n               })\n          }\n     }\n\n     componentDidMount() {\n          this.GetBroadcasters()\n     }\n\n     GetBroadcasters = () => {\n          axios.get(`${configs.API_URL}/broadcaster/list`)\n               .then(res => {\n                    this.setState({\n                         broadcasters: res.data\n                    })\n                    console.log(res.data)\n               })\n     }\n\n\n\n     render() {\n          return (\n               <div>\n                    <NavBar user={this.state.user} history={this.props.history} handleSwitch={this.handleSwitch} isStreaming={false} />\n                    <table className=\"table\">\n                         <thead className=\"bg-primary text-light\">\n                              <tr>\n                                   <th scope=\"col\"><h1>On Stream</h1></th>\n                              </tr>\n                         </thead>\n                         <tbody>\n                              {Object.keys(this.state.broadcasters).length === 0 ? <tr><td>No streamer online</td></tr> : (\n                                   Object.keys(this.state.broadcasters).map((key, i) => {\n                                        if (this.state.broadcasters[key].mode === 'private') {\n                                             return (\n                                                  <tr key={i}><td>\n                                                       <Button variant=\"link\" onClick={() => { this.handleShow('private', this.state.broadcasters[key].name) }}>\n                                                            {this.state.broadcasters[key].name}\n                                                       &nbsp;\n                                                       <span className=\"badge badge-danger\">private</span>\n                                                       </Button>\n                                                  </td></tr>\n\n\n                                             )\n                                        }\n                                        else {\n                                             return (\n                                                  <tr key={i}><td>\n                                                       <Button variant=\"link\" onClick={() => { this.handleShow('public', this.state.broadcasters[key].name) }}>\n                                                            {this.state.broadcasters[key].name}\n                                                       &nbsp;\n                                                       <span className=\"badge badge-success\">public</span>\n                                                       </Button>\n                                                  </td></tr>\n                                             )\n                                        }\n                                   }\n                                   )\n                              )}\n                         </tbody>\n                    </table>\n\n                    <Modal show={this.state.show} onHide={this.handleClose}>\n                         <Modal.Header closeButton>\n                              <Modal.Title>Room authentication</Modal.Title>\n                         </Modal.Header>\n                         <Modal.Body>\n                              <div>Enter password</div>\n                              <input id='password' type='text' />\n                         </Modal.Body>\n                         <Modal.Footer>\n                              <Button variant=\"secondary\" onClick={this.handleClose}>\n                                   Close\n                              </Button>\n                              <Button variant=\"primary\" onClick={this.handleSubmit}>\n                                   Submit\n                              </Button>\n                         </Modal.Footer>\n                    </Modal>\n               </div>\n          )\n     }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}