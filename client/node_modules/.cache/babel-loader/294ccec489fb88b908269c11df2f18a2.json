{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js\";\nimport React from \"react\";\nimport './styles/home.style.css';\nimport './styles/common.style.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport authService from '../services/auth.service';\nimport configs from '../config';\nimport axios from 'axios';\nimport NavBar from \"../components/navbar.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props); // check if user did not sign in\n\n    this.GetBroadcasters = () => {\n      axios.get(`${configs.API_URL}/broadcaster/list`).then(res => {\n        this.setState({\n          broadcasters: res.data\n        });\n        console.log(this.state.broadcasters);\n      });\n    };\n\n    let user = authService.getCurrentUser();\n\n    if (!user) {\n      this.state = {\n        broadcasters: {},\n        user: null,\n        isPrivate: false\n      };\n    } else {\n      this.state = {\n        broadcasters: {},\n        user: JSON.parse(user),\n        isPrivate: false\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.GetBroadcasters();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        user: this.state.user,\n        history: this.props.history,\n        handleSwitch: this.handleSwitch,\n        isStreaming: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-primary text-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"On Stream\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(this.state.broadcasters).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"No streamer online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 84\n          }, this) : Object.keys(this.state.broadcasters).map((key, i) => {\n            let link = `/watch/${this.state.broadcasters[key].id}`;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: link,\n                  children: this.state.broadcasters[key].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 55\n                }, this), \" mode: \", this.state.broadcasters[key].mode]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 51\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 46\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js"],"names":["React","authService","configs","axios","NavBar","Home","Component","constructor","props","GetBroadcasters","get","API_URL","then","res","setState","broadcasters","data","console","log","state","user","getCurrentUser","isPrivate","JSON","parse","componentDidMount","render","history","handleSwitch","Object","keys","length","map","key","i","link","id","name","mode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './styles/home.style.css'\nimport './styles/common.style.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport authService from '../services/auth.service'\nimport configs from '../config'\nimport axios from 'axios'\nimport NavBar from \"../components/navbar.component\";\n\nclass Home extends React.Component {\n\n     constructor(props) {\n          super(props)\n\n          // check if user did not sign in\n          let user = authService.getCurrentUser();\n          if (!user) {\n               this.state = {\n                    broadcasters: {},\n                    user: null,\n                    isPrivate : false\n               }\n          }\n          else {\n               this.state = {\n                    broadcasters: {},\n                    user: JSON.parse(user),\n                    isPrivate : false\n               }\n          }\n\n     }\n\n     componentDidMount() {\n          this.GetBroadcasters()\n     }\n\n     GetBroadcasters = () => {\n          axios.get(`${configs.API_URL}/broadcaster/list`)\n               .then(res => {\n                    this.setState({\n                         broadcasters: res.data\n                    })\n                    console.log(this.state.broadcasters)\n               })\n     }\n\n     \n\n     render() {\n          return (\n               <div>\n                    <NavBar user={this.state.user} history={this.props.history} handleSwitch={this.handleSwitch} isStreaming={false} />\n                    <table className=\"table\">\n                         <thead className=\"bg-primary text-light\">\n                              <tr>\n                                   <th scope=\"col\"><h1>On Stream</h1></th>\n                              </tr>\n                         </thead>\n                         <tbody>\n                              {Object.keys(this.state.broadcasters).length === 0 ? <tr><td>No streamer online</td></tr> : (\n                                   Object.keys(this.state.broadcasters).map((key, i) => {\n                                        let link = `/watch/${this.state.broadcasters[key].id}`\n                                        return (\n                                             <tr key={i}>\n                                                  <td><a href={link}>{this.state.broadcasters[key].name}</a> mode: {this.state.broadcasters[key].mode}</td>\n                                             </tr>\n                                        )\n                                   }\n                                   ))}\n                         </tbody>\n                    </table>\n\n                    <ul>\n\n                    </ul>\n               </div>\n          )\n     }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}