{"ast":null,"code":"var _jsxFileName = \"E:\\\\k_xoa_nhe\\\\client\\\\src\\\\pages\\\\broadcaster.page.js\";\nimport React from \"react\";\nimport io from 'socket.io-client';\nimport '../styles/home.style.css';\nimport { config } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BroadCaster extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.StopStreaming = () => {};\n\n    this.StartStream = () => {\n      // client list\n      const peerConnections = {}; // socket connection\n\n      const socket = io(`${config.NODE_IP}:${config.NODE_PORT}`);\n      const video = document.querySelector(\"video\"); // Use camera\n      // navigator.mediaDevices\n      //      .getUserMedia(constraints)\n      //      .then(stream => {\n      //           video.srcObject = stream;\n      //           socket.emit(\"broadcaster\");\n      //      })\n      //      .catch(error => console.error(error));\n      // Use screen\n\n      navigator.mediaDevices.getDisplayMedia(config.VIDEO_CONSTRAINS).then(function (mediaStream) {\n        video.srcObject = mediaStream;\n        socket.emit(\"broadcaster\");\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      }); // Socket handler\n\n      socket.on(\"start-watching\", id => {\n        const peerConnection = new RTCPeerConnection(config);\n        peerConnections[id] = peerConnection;\n        let stream = video.srcObject;\n        stream.getTracks().forEach(track => {\n          peerConnection.addTrack(track, stream);\n        });\n\n        peerConnection.onicecandidate = event => {\n          if (event.candidate) {\n            socket.emit(\"candidate\", id, event.candidate);\n          }\n        };\n\n        peerConnection.createOffer().then(sdp => peerConnection.setLocalDescription(sdp)).then(() => {\n          socket.emit(\"offer\", id, peerConnection.localDescription);\n        });\n      });\n      socket.on(\"answer\", (id, description) => {\n        peerConnections[id].setRemoteDescription(description);\n      });\n      socket.on(\"candidate\", (id, candidate) => {\n        peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\n      });\n      socket.on(\"disconnectPeer\", id => {\n        peerConnections[id].close();\n        delete peerConnections[id];\n      });\n\n      window.onunload = window.onbeforeunload = () => {\n        socket.close();\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"User: hoangnd\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"control-btn\",\n        onClick: this.StartStream,\n        children: \"Start streaming\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"stream-screen\",\n        style: {\n          margin: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BroadCaster;","map":{"version":3,"sources":["E:/k_xoa_nhe/client/src/pages/broadcaster.page.js"],"names":["React","io","config","BroadCaster","Component","StopStreaming","StartStream","peerConnections","socket","NODE_IP","NODE_PORT","video","document","querySelector","navigator","mediaDevices","getDisplayMedia","VIDEO_CONSTRAINS","then","mediaStream","srcObject","emit","catch","err","console","log","name","message","on","id","peerConnection","RTCPeerConnection","stream","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","createOffer","sdp","setLocalDescription","localDescription","description","setRemoteDescription","addIceCandidate","RTCIceCandidate","close","window","onunload","onbeforeunload","render","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport io from 'socket.io-client'\r\nimport '../styles/home.style.css'\r\nimport { config } from '../config'\r\n\r\nclass BroadCaster extends React.Component {\r\n\r\n    // Stop streamming\r\n    StopStreaming = () => {\r\n\r\n    }\r\n\r\n    // Start streaming\r\n    StartStream = () => {\r\n\r\n        // client list\r\n        const peerConnections = {};\r\n\r\n        // socket connection\r\n        const socket = io(`${config.NODE_IP}:${config.NODE_PORT}`);\r\n\r\n        const video = document.querySelector(\"video\");\r\n\r\n        // Use camera\r\n        // navigator.mediaDevices\r\n        //      .getUserMedia(constraints)\r\n        //      .then(stream => {\r\n        //           video.srcObject = stream;\r\n        //           socket.emit(\"broadcaster\");\r\n        //      })\r\n        //      .catch(error => console.error(error));\r\n\r\n        // Use screen\r\n        navigator.mediaDevices.getDisplayMedia(config.VIDEO_CONSTRAINS)\r\n            .then(function (mediaStream) {\r\n                video.srcObject = mediaStream;\r\n                socket.emit(\"broadcaster\");\r\n            })\r\n            .catch(function (err) { console.log(err.name + \": \" + err.message); });\r\n\r\n        // Socket handler\r\n        socket.on(\"start-watching\", id => {\r\n            const peerConnection = new RTCPeerConnection(config);\r\n            peerConnections[id] = peerConnection;\r\n\r\n            let stream = video.srcObject;\r\n            stream.getTracks().forEach(track => {\r\n                peerConnection.addTrack(track, stream)\r\n            });\r\n\r\n            peerConnection.onicecandidate = event => {\r\n                if (event.candidate) {\r\n                    socket.emit(\"candidate\", id, event.candidate);\r\n                }\r\n            };\r\n\r\n            peerConnection\r\n                .createOffer()\r\n                .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                .then(() => {\r\n                    socket.emit(\"offer\", id, peerConnection.localDescription);\r\n                });\r\n        });\r\n\r\n        socket.on(\"answer\", (id, description) => {\r\n            peerConnections[id].setRemoteDescription(description);\r\n        });\r\n\r\n        socket.on(\"candidate\", (id, candidate) => {\r\n            peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\r\n        });\r\n\r\n        socket.on(\"disconnectPeer\", id => {\r\n            peerConnections[id].close();\r\n            delete peerConnections[id];\r\n        });\r\n\r\n        window.onunload = window.onbeforeunload = () => {\r\n            socket.close();\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                User: hoangnd&nbsp;\r\n                <button id='control-btn' onClick={this.StartStream}>Start streaming</button>\r\n                <div id='stream-screen' style={{ margin: '20px' }}>\r\n                    <video playsInline autoPlay muted></video>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BroadCaster;"]},"metadata":{},"sourceType":"module"}