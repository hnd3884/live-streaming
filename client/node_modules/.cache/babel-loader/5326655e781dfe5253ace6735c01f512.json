{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js\";\nimport React from \"react\";\nimport './styles/home.style.css';\nimport './styles/common.style.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport authService from '../services/auth.service';\nimport configs from '../config';\nimport axios from 'axios';\nimport NavBar from \"../components/navbar.component\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props); // check if user did not sign in\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.GetBroadcasters = () => {\n      axios.get(`${configs.API_URL}/broadcaster/list`).then(res => {\n        this.setState({\n          broadcasters: res.data\n        });\n        console.log(this.state.broadcasters);\n      });\n    };\n\n    let user = authService.getCurrentUser();\n\n    if (!user) {\n      this.state = {\n        broadcasters: {},\n        user: null,\n        isPrivate: false,\n        show: false\n      };\n    } else {\n      this.state = {\n        broadcasters: {},\n        user: JSON.parse(user),\n        isPrivate: false,\n        show: false\n      };\n    }\n  }\n\n  componentDidMount() {\n    this.GetBroadcasters();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        user: this.state.user,\n        history: this.props.history,\n        handleSwitch: this.handleSwitch,\n        isStreaming: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-primary text-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"On Stream\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(this.state.broadcasters).length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"No streamer online\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 84\n          }, this) : Object.keys(this.state.broadcasters).map((key, i) => {\n            let link = `/watch/${this.state.broadcasters[key].id}`;\n\n            if (this.state.broadcasters[key].mode === 'private') {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: this.handleShow,\n                children: [this.state.broadcasters[key].name, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"badge badge-success\",\n                  children: \"public\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 51\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: this.handleShow,\n                children: [this.state.broadcasters[key].name, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"badge badge-success\",\n                  children: \"public\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 51\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Room authentication\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Enter password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: this.handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.handleClose,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js"],"names":["React","authService","configs","axios","NavBar","Button","Modal","Home","Component","constructor","props","handleClose","setState","show","handleShow","GetBroadcasters","get","API_URL","then","res","broadcasters","data","console","log","state","user","getCurrentUser","isPrivate","JSON","parse","componentDidMount","render","history","handleSwitch","Object","keys","length","map","key","i","link","id","mode","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './styles/home.style.css'\nimport './styles/common.style.css'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport authService from '../services/auth.service'\nimport configs from '../config'\nimport axios from 'axios'\nimport NavBar from \"../components/navbar.component\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nclass Home extends React.Component {\n\n     constructor(props) {\n          super(props)\n\n          // check if user did not sign in\n          let user = authService.getCurrentUser();\n          if (!user) {\n               this.state = {\n                    broadcasters: {},\n                    user: null,\n                    isPrivate: false,\n                    show: false\n               }\n          }\n          else {\n               this.state = {\n                    broadcasters: {},\n                    user: JSON.parse(user),\n                    isPrivate: false,\n                    show: false\n               }\n          }\n     }\n\n     handleClose = () => {\n          this.setState({\n               show: false\n          })\n     }\n\n     handleShow = () => {\n          this.setState({\n               show: true\n          })\n     }\n\n     componentDidMount() {\n          this.GetBroadcasters()\n     }\n\n     GetBroadcasters = () => {\n          axios.get(`${configs.API_URL}/broadcaster/list`)\n               .then(res => {\n                    this.setState({\n                         broadcasters: res.data\n                    })\n                    console.log(this.state.broadcasters)\n               })\n     }\n\n\n\n     render() {\n          return (\n               <div>\n                    <NavBar user={this.state.user} history={this.props.history} handleSwitch={this.handleSwitch} isStreaming={false} />\n                    <table className=\"table\">\n                         <thead className=\"bg-primary text-light\">\n                              <tr>\n                                   <th scope=\"col\"><h1>On Stream</h1></th>\n                              </tr>\n                         </thead>\n                         <tbody>\n                              {/* {Object.keys(this.state.broadcasters).length === 0 ? <tr><td>No streamer online</td></tr> : (\n                                   Object.keys(this.state.broadcasters).map((key, i) => {\n                                        let link = `/watch/${this.state.broadcasters[key].id}`\n\n                                        if (this.state.broadcasters[key].mode === 'private') {\n                                             return (\n                                                  <tr key={i}>\n                                                       <td><a href={link}>{this.state.broadcasters[key].name}</a> <span class=\"badge badge-danger\">private</span></td>\n                                                  </tr>\n                                             )\n                                        }\n                                        else {\n                                             return (\n                                                  <tr key={i}>\n                                                       <td><a href={link}>{this.state.broadcasters[key].name}</a> <span class=\"badge badge-success\">public</span></td>\n                                                  </tr>\n                                             )\n                                        }\n                                   }\n                                   )\n                              )} */}\n                              {Object.keys(this.state.broadcasters).length === 0 ? <tr><td>No streamer online</td></tr> : (\n                                   Object.keys(this.state.broadcasters).map((key, i) => {\n                                        let link = `/watch/${this.state.broadcasters[key].id}`\n\n                                        if (this.state.broadcasters[key].mode === 'private') {\n                                             return (\n                                                  <Button variant=\"link\" onClick={this.handleShow}>\n                                                       {this.state.broadcasters[key].name}\n                                                       &nbsp;\n                                                       <span class=\"badge badge-success\">public</span>\n                                                  </Button>\n                                             )\n                                        }\n                                        else {\n                                             return (\n                                                  <Button variant=\"link\" onClick={this.handleShow}>\n                                                       {this.state.broadcasters[key].name}\n                                                       &nbsp;\n                                                       <span class=\"badge badge-success\">public</span>\n                                                  </Button>\n                                             )\n                                        }\n                                   }\n                                   )\n                              )}\n\n                         </tbody>\n                    </table>\n\n                    <Modal show={this.state.show} onHide={this.handleClose}>\n                         <Modal.Header closeButton>\n                              <Modal.Title>Room authentication</Modal.Title>\n                         </Modal.Header>\n                         <Modal.Body>\n                              <div>Enter password</div>\n                              <input type='text' />\n                         </Modal.Body>\n                         <Modal.Footer>\n                              <Button variant=\"secondary\" onClick={this.handleClose}>\n                                   Close\n                              </Button>\n                              <Button variant=\"primary\" onClick={this.handleClose}>\n                                   Submit\n                              </Button>\n                         </Modal.Footer>\n                    </Modal>\n               </div>\n          )\n     }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}