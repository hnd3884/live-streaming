{"ast":null,"code":"var _jsxFileName = \"/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js\";\nimport React from \"react\";\nimport io from 'socket.io-client';\nimport '../styles/home.style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.StopStreaming = () => {};\n\n    this.StartStream = () => {\n      // === socket handler ===\n      const peerConnections = {};\n      const config = {\n        iceServers: [{\n          urls: [\"stun:stun.l.google.com:19302\"]\n        }]\n      }; // const socket = io('localhost:5000');\n\n      const socket = io('192.168.1.6:5000');\n      const video = document.querySelector(\"video\"); // Media contrains\n\n      const constraints = {\n        video: true,\n        audio: true\n      }; // navigator.mediaDevices.getDisplayMedia(constraints, stream => {\n      //      video.srcObject = stream;\n      //      socket.emit(\"broadcaster\");\n      // }, err => console.error(err))\n\n      navigator.mediaDevices.getDisplayMedia(constraints).then(function (mediaStream) {\n        video.srcObject = mediaStream;\n        socket.emit(\"broadcaster\");\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      });\n      socket.on(\"watcher\", id => {\n        const peerConnection = new RTCPeerConnection(config);\n        peerConnections[id] = peerConnection;\n        let stream = video.srcObject;\n        stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n\n        peerConnection.onicecandidate = event => {\n          if (event.candidate) {\n            socket.emit(\"candidate\", id, event.candidate);\n          }\n        };\n\n        peerConnection.createOffer().then(sdp => peerConnection.setLocalDescription(sdp)).then(() => {\n          socket.emit(\"offer\", id, peerConnection.localDescription);\n        });\n      });\n      socket.on(\"answer\", (id, description) => {\n        peerConnections[id].setRemoteDescription(description);\n      });\n      socket.on(\"candidate\", (id, candidate) => {\n        peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\n      });\n      socket.on(\"disconnectPeer\", id => {\n        peerConnections[id].close();\n        delete peerConnections[id];\n      });\n\n      window.onunload = window.onbeforeunload = () => {\n        socket.close();\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Streamer online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"User: hoangnd\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"control-btn\",\n          onClick: this.StartStream,\n          children: \"Start streaming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"stream-screen\",\n          style: {\n            margin: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            playsInline: true,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/hoangnd/Documents/hust/20202/project/livestream/client/src/pages/home.page.js"],"names":["React","io","Home","Component","StopStreaming","StartStream","peerConnections","config","iceServers","urls","socket","video","document","querySelector","constraints","audio","navigator","mediaDevices","getDisplayMedia","then","mediaStream","srcObject","emit","catch","err","console","log","name","message","on","id","peerConnection","RTCPeerConnection","stream","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","createOffer","sdp","setLocalDescription","localDescription","description","setRemoteDescription","addIceCandidate","RTCIceCandidate","close","window","onunload","onbeforeunload","render","margin"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,0BAAP;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAG9BC,aAH8B,GAGd,MAAM,CAErB,CAL6B;;AAAA,SAQ9BC,WAR8B,GAQhB,MAAM;AACf;AACA,YAAMC,eAAe,GAAG,EAAxB;AACA,YAAMC,MAAM,GAAG;AACVC,QAAAA,UAAU,EAAE,CACP;AACKC,UAAAA,IAAI,EAAE,CAAC,8BAAD;AADX,SADO;AADF,OAAf,CAHe,CAWf;;AACA,YAAMC,MAAM,GAAGT,EAAE,CAAC,kBAAD,CAAjB;AACA,YAAMU,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd,CAbe,CAef;;AACA,YAAMC,WAAW,GAAG;AACfH,QAAAA,KAAK,EAAE,IADQ;AAEfI,QAAAA,KAAK,EAAE;AAFQ,OAApB,CAhBe,CAqBf;AACA;AACA;AACA;;AAEAC,MAAAA,SAAS,CAACC,YAAV,CAAuBC,eAAvB,CAAuCJ,WAAvC,EACMK,IADN,CACW,UAAUC,WAAV,EAAuB;AACxBT,QAAAA,KAAK,CAACU,SAAN,GAAkBD,WAAlB;AACAV,QAAAA,MAAM,CAACY,IAAP,CAAY,aAAZ;AACJ,OAJN,EAKMC,KALN,CAKY,UAAUC,GAAV,EAAe;AAAEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,GAAW,IAAX,GAAkBH,GAAG,CAACI,OAAlC;AAA6C,OAL1E;AAOAlB,MAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqBC,EAAE,IAAI;AACtB,cAAMC,cAAc,GAAG,IAAIC,iBAAJ,CAAsBzB,MAAtB,CAAvB;AACAD,QAAAA,eAAe,CAACwB,EAAD,CAAf,GAAsBC,cAAtB;AAEA,YAAIE,MAAM,GAAGtB,KAAK,CAACU,SAAnB;AACAY,QAAAA,MAAM,CAACC,SAAP,GAAmBC,OAAnB,CAA2BC,KAAK,IAAIL,cAAc,CAACM,QAAf,CAAwBD,KAAxB,EAA+BH,MAA/B,CAApC;;AAEAF,QAAAA,cAAc,CAACO,cAAf,GAAgCC,KAAK,IAAI;AACpC,cAAIA,KAAK,CAACC,SAAV,EAAqB;AAChB9B,YAAAA,MAAM,CAACY,IAAP,CAAY,WAAZ,EAAyBQ,EAAzB,EAA6BS,KAAK,CAACC,SAAnC;AACJ;AACL,SAJD;;AAMAT,QAAAA,cAAc,CACRU,WADN,GAEMtB,IAFN,CAEWuB,GAAG,IAAIX,cAAc,CAACY,mBAAf,CAAmCD,GAAnC,CAFlB,EAGMvB,IAHN,CAGW,MAAM;AACPT,UAAAA,MAAM,CAACY,IAAP,CAAY,OAAZ,EAAqBQ,EAArB,EAAyBC,cAAc,CAACa,gBAAxC;AACJ,SALN;AAMJ,OAnBD;AAqBAlC,MAAAA,MAAM,CAACmB,EAAP,CAAU,QAAV,EAAoB,CAACC,EAAD,EAAKe,WAAL,KAAqB;AACpCvC,QAAAA,eAAe,CAACwB,EAAD,CAAf,CAAoBgB,oBAApB,CAAyCD,WAAzC;AACJ,OAFD;AAIAnC,MAAAA,MAAM,CAACmB,EAAP,CAAU,WAAV,EAAuB,CAACC,EAAD,EAAKU,SAAL,KAAmB;AACrClC,QAAAA,eAAe,CAACwB,EAAD,CAAf,CAAoBiB,eAApB,CAAoC,IAAIC,eAAJ,CAAoBR,SAApB,CAApC;AACJ,OAFD;AAIA9B,MAAAA,MAAM,CAACmB,EAAP,CAAU,gBAAV,EAA4BC,EAAE,IAAI;AAC7BxB,QAAAA,eAAe,CAACwB,EAAD,CAAf,CAAoBmB,KAApB;AACA,eAAO3C,eAAe,CAACwB,EAAD,CAAtB;AACJ,OAHD;;AAKAoB,MAAAA,MAAM,CAACC,QAAP,GAAkBD,MAAM,CAACE,cAAP,GAAwB,MAAM;AAC3C1C,QAAAA,MAAM,CAACuC,KAAP;AACJ,OAFD;AAGJ,KA9E6B;AAAA;;AAgF9BI,EAAAA,MAAM,GAAG;AACJ,wBACK;AAAA,8BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAA;AAAA;AAAA;AAAA,cAFL,eAKK;AAAA;AAAA;AAAA;AAAA,cALL,eAMK;AAAA,qDAEA;AAAQ,UAAA,EAAE,EAAC,aAAX;AAAyB,UAAA,OAAO,EAAE,KAAKhD,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGK;AAAK,UAAA,EAAE,EAAC,eAAR;AAAwB,UAAA,KAAK,EAAE;AAAEiD,YAAAA,MAAM,EAAE;AAAV,WAA/B;AAAA,iCACK;AAAO,YAAA,WAAW,MAAlB;AAAmB,YAAA,QAAQ;AAA3B;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,gBAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAgBJ;;AAjG6B;;AAoGnC,eAAepD,IAAf","sourcesContent":["import React from \"react\";\nimport io from 'socket.io-client'\nimport '../styles/home.style.css'\n\nclass Home extends React.Component {\n\n     // Stop streamming\n     StopStreaming = () => {\n\n     }\n\n     // Start streaming\n     StartStream = () => {\n          // === socket handler ===\n          const peerConnections = {};\n          const config = {\n               iceServers: [\n                    {\n                         urls: [\"stun:stun.l.google.com:19302\"]\n                    }\n               ]\n          };\n\n          // const socket = io('localhost:5000');\n          const socket = io('192.168.1.6:5000');\n          const video = document.querySelector(\"video\");\n\n          // Media contrains\n          const constraints = {\n               video: true,\n               audio: true,\n          };\n\n          // navigator.mediaDevices.getDisplayMedia(constraints, stream => {\n          //      video.srcObject = stream;\n          //      socket.emit(\"broadcaster\");\n          // }, err => console.error(err))\n\n          navigator.mediaDevices.getDisplayMedia(constraints)\n               .then(function (mediaStream) {\n                    video.srcObject = mediaStream;\n                    socket.emit(\"broadcaster\");\n               })\n               .catch(function (err) { console.log(err.name + \": \" + err.message); });\n\n          socket.on(\"watcher\", id => {\n               const peerConnection = new RTCPeerConnection(config);\n               peerConnections[id] = peerConnection;\n\n               let stream = video.srcObject;\n               stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n\n               peerConnection.onicecandidate = event => {\n                    if (event.candidate) {\n                         socket.emit(\"candidate\", id, event.candidate);\n                    }\n               };\n\n               peerConnection\n                    .createOffer()\n                    .then(sdp => peerConnection.setLocalDescription(sdp))\n                    .then(() => {\n                         socket.emit(\"offer\", id, peerConnection.localDescription);\n                    });\n          });\n\n          socket.on(\"answer\", (id, description) => {\n               peerConnections[id].setRemoteDescription(description);\n          });\n\n          socket.on(\"candidate\", (id, candidate) => {\n               peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\n          });\n\n          socket.on(\"disconnectPeer\", id => {\n               peerConnections[id].close();\n               delete peerConnections[id];\n          });\n\n          window.onunload = window.onbeforeunload = () => {\n               socket.close();\n          };\n     }\n\n     render() {\n          return (\n               <div>\n                    <h1>Streamer online</h1>\n                    <ul>\n\n                    </ul>\n                    <hr></hr>\n                    <div>\n                         User: hoangnd&nbsp;\n                    <button id='control-btn' onClick={this.StartStream}>Start streaming</button>\n                         <div id='stream-screen' style={{ margin: '20px' }}>\n                              <video playsInline autoPlay></video>\n                         </div>\n                    </div>\n               </div>\n          )\n     }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}