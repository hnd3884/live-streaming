{"ast":null,"code":"import axios from 'axios';\nimport configs from '../config';\n\nclass AuthService {\n  constructor() {\n    this.login = async (username, password) => {\n      const response = await axios.post(configs.API_URL + \"/auth/login\", {\n        username,\n        password\n      });\n\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        return null;\n      } else {\n        return response.data.error;\n      }\n    };\n\n    this.logout = () => {\n      localStorage.removeItem(\"user\");\n    };\n\n    this.register = async (username, email, password, name) => {\n      const response = await axios.post(configs.API_URL + \"/user/add\", {\n        username,\n        name,\n        email,\n        password\n      });\n      return response;\n    };\n\n    this.getCurrentUser = () => {\n      return localStorage.getItem('user');\n    };\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["/home/hoangnd/Documents/hust/20202/project/livestream/client/src/services/auth.service.ts"],"names":["axios","configs","AuthService","login","username","password","response","post","API_URL","data","token","localStorage","setItem","JSON","stringify","error","logout","removeItem","register","email","name","getCurrentUser","getItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACbC,KADa,GACL,OAAOC,QAAP,EAAyBC,QAAzB,KAA8C;AACjD,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,OAAO,CAACO,OAAR,GAAkB,aAA7B,EAA4C;AAC9DJ,QAAAA,QAD8D;AAE9DC,QAAAA;AAF8D,OAA5C,CAAvB;;AAIA,UAAIC,QAAQ,CAACG,IAAT,CAAcC,KAAlB,EAAyB;AACpBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACG,IAAxB,CAA7B;AACA,eAAO,IAAP;AACJ,OAHD,MAGO;AACF,eAAOH,QAAQ,CAACG,IAAT,CAAcM,KAArB;AACJ;AACL,KAZY;;AAAA,SAcbC,MAda,GAcJ,MAAM;AACVL,MAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACJ,KAhBY;;AAAA,SAkBbC,QAlBa,GAkBF,OAAOd,QAAP,EAAyBe,KAAzB,EAAwCd,QAAxC,EAA0De,IAA1D,KAA2E;AACjF,YAAMd,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAN,CAAWN,OAAO,CAACO,OAAR,GAAkB,WAA7B,EAA0C;AAC5DJ,QAAAA,QAD4D;AAE5DgB,QAAAA,IAF4D;AAG5DD,QAAAA,KAH4D;AAI5Dd,QAAAA;AAJ4D,OAA1C,CAAvB;AAOA,aAAOC,QAAP;AACJ,KA3BY;;AAAA,SA6Bbe,cA7Ba,GA6BI,MAAM;AAClB,aAAOV,YAAY,CAACW,OAAb,CAAqB,MAArB,CAAP;AACJ,KA/BY;AAAA;;AAAA;;AAkClB,eAAe,IAAIpB,WAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport configs from '../config'\n\nclass AuthService {\n     login = async (username: String, password: String) => {\n          const response = await axios.post(configs.API_URL + \"/auth/login\", {\n               username,\n               password\n          });\n          if (response.data.token) {\n               localStorage.setItem(\"user\", JSON.stringify(response.data));\n               return null\n          } else {\n               return response.data.error\n          }\n     }\n\n     logout = () => {\n          localStorage.removeItem(\"user\");\n     }\n\n     register = async (username: String, email: String, password: String, name: String) => {\n          const response = await axios.post(configs.API_URL + \"/user/add\", {\n               username,\n               name,\n               email,\n               password\n          });\n\n          return response\n     }\n\n     getCurrentUser = () => {\n          return localStorage.getItem('user')\n     }\n}\n\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}