{"ast":null,"code":"var _jsxFileName = \"E:\\\\k_xoa_nhe\\\\client\\\\src\\\\pages\\\\home.page.js\";\nimport React from \"react\";\nimport io from 'socket.io-client';\nimport '../styles/home.style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.StopStreaming = () => {};\n\n    this.StartStream = () => {\n      // client list\n      const peerConnections = {}; // socket connection\n\n      const socket = io(`${config.NODE_IP}:${config.NODE_PORT}`);\n      const video = document.querySelector(\"video\"); // Use camera\n      // navigator.mediaDevices\n      //      .getUserMedia(constraints)\n      //      .then(stream => {\n      //           video.srcObject = stream;\n      //           socket.emit(\"broadcaster\");\n      //      })\n      //      .catch(error => console.error(error));\n      // Use screen\n\n      navigator.mediaDevices.getDisplayMedia(config.VIDEO_CONSTRAINS).then(function (mediaStream) {\n        video.srcObject = mediaStream;\n        socket.emit(\"broadcaster\");\n      }).catch(function (err) {\n        console.log(err.name + \": \" + err.message);\n      }); // Socket handler\n\n      socket.on(\"watcher\", id => {\n        const peerConnection = new RTCPeerConnection(config);\n        peerConnections[id] = peerConnection;\n        let stream = video.srcObject;\n        stream.getTracks().forEach(track => {\n          console.log(123);\n          peerConnection.addTrack(track, stream);\n        });\n\n        peerConnection.onicecandidate = event => {\n          if (event.candidate) {\n            socket.emit(\"candidate\", id, event.candidate);\n          }\n        };\n\n        peerConnection.createOffer().then(sdp => peerConnection.setLocalDescription(sdp)).then(() => {\n          socket.emit(\"offer\", id, peerConnection.localDescription);\n        });\n      });\n      socket.on(\"answer\", (id, description) => {\n        peerConnections[id].setRemoteDescription(description);\n      });\n      socket.on(\"candidate\", (id, candidate) => {\n        peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\n      });\n      socket.on(\"disconnectPeer\", id => {\n        peerConnections[id].close();\n        delete peerConnections[id];\n      });\n\n      window.onunload = window.onbeforeunload = () => {\n        socket.close();\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Streamer online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"User: hoangnd\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"control-btn\",\n          onClick: this.StartStream,\n          children: \"Start streaming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"stream-screen\",\n          style: {\n            margin: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"video\", {\n            playsInline: true,\n            autoPlay: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["E:/k_xoa_nhe/client/src/pages/home.page.js"],"names":["React","io","Home","Component","StopStreaming","StartStream","peerConnections","socket","config","NODE_IP","NODE_PORT","video","document","querySelector","navigator","mediaDevices","getDisplayMedia","VIDEO_CONSTRAINS","then","mediaStream","srcObject","emit","catch","err","console","log","name","message","on","id","peerConnection","RTCPeerConnection","stream","getTracks","forEach","track","addTrack","onicecandidate","event","candidate","createOffer","sdp","setLocalDescription","localDescription","description","setRemoteDescription","addIceCandidate","RTCIceCandidate","close","window","onunload","onbeforeunload","render","margin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport io from 'socket.io-client'\r\nimport '../styles/home.style.css'\r\n\r\nclass Home extends React.Component {\r\n\r\n     // Stop streamming\r\n     StopStreaming = () => {\r\n\r\n     }\r\n\r\n     // Start streaming\r\n     StartStream = () => {\r\n\r\n          // client list\r\n          const peerConnections = {};\r\n\r\n          // socket connection\r\n          const socket = io(`${config.NODE_IP}:${config.NODE_PORT}`);\r\n\r\n          const video = document.querySelector(\"video\");\r\n\r\n          // Use camera\r\n          // navigator.mediaDevices\r\n          //      .getUserMedia(constraints)\r\n          //      .then(stream => {\r\n          //           video.srcObject = stream;\r\n          //           socket.emit(\"broadcaster\");\r\n          //      })\r\n          //      .catch(error => console.error(error));\r\n\r\n          // Use screen\r\n          navigator.mediaDevices.getDisplayMedia(config.VIDEO_CONSTRAINS)\r\n               .then(function (mediaStream) {\r\n                    video.srcObject = mediaStream;\r\n                    socket.emit(\"broadcaster\");\r\n               })\r\n               .catch(function (err) { console.log(err.name + \": \" + err.message); });\r\n\r\n          // Socket handler\r\n          socket.on(\"watcher\", id => {\r\n               const peerConnection = new RTCPeerConnection(config);\r\n               peerConnections[id] = peerConnection;\r\n\r\n               let stream = video.srcObject;\r\n               stream.getTracks().forEach(track => {\r\n                    console.log(123)\r\n                    peerConnection.addTrack(track, stream)\r\n               });\r\n\r\n               peerConnection.onicecandidate = event => {\r\n                    if (event.candidate) {\r\n                         socket.emit(\"candidate\", id, event.candidate);\r\n                    }\r\n               };\r\n\r\n               peerConnection\r\n                    .createOffer()\r\n                    .then(sdp => peerConnection.setLocalDescription(sdp))\r\n                    .then(() => {\r\n                         socket.emit(\"offer\", id, peerConnection.localDescription);\r\n                    });\r\n          });\r\n\r\n          socket.on(\"answer\", (id, description) => {\r\n               peerConnections[id].setRemoteDescription(description);\r\n          });\r\n\r\n          socket.on(\"candidate\", (id, candidate) => {\r\n               peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\r\n          });\r\n\r\n          socket.on(\"disconnectPeer\", id => {\r\n               peerConnections[id].close();\r\n               delete peerConnections[id];\r\n          });\r\n\r\n          window.onunload = window.onbeforeunload = () => {\r\n               socket.close();\r\n          };\r\n     }\r\n\r\n     render() {\r\n          return (\r\n               <div>\r\n                    <h1>Streamer online</h1>\r\n                    <ul>\r\n\r\n                    </ul>\r\n                    <hr></hr>\r\n                    <div>\r\n                         User: hoangnd&nbsp;\r\n                    <button id='control-btn' onClick={this.StartStream}>Start streaming</button>\r\n                         <div id='stream-screen' style={{ margin: '20px' }}>\r\n                              <video playsInline autoPlay muted></video>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}